{"version":3,"sources":["main/Main.jsx","sidebar/Sidebar.jsx","App.jsx","index.js"],"names":["Main","activeNote","onUpdateNote","onEditField","field","value","Date","now","className","type","id","placeholder","title","onChange","e","target","autoFocus","body","Sidebar","notes","onAddNote","onDeleteNote","setActiveNote","sortedNotes","sort","a","b","lastModified","onClick","map","i","substr","toLocaleDateString","hour","minute","App","useState","localStorage","JSON","parse","setNotes","useEffect","setItem","stringify","newNote","uuid","noteId","filter","find","updatedNote","updatedNotesArr","note","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"iPAyCeA,EAvCF,SAAC,GAAkC,IAAhCC,EAA+B,EAA/BA,WAAYC,EAAmB,EAAnBA,aACpBC,EAAc,SAACC,EAAOC,GAAW,IAAD,EACpCH,EAAa,2BACRD,GADO,uBAETG,EAAQC,GAFC,6BAGIC,KAAKC,OAHT,MAOd,OAAKN,EAGH,sBAAKO,UAAU,WAAf,UACE,sBAAKA,UAAU,qBAAf,UACE,uBACEC,KAAK,OACLC,GAAG,QACHC,YAAY,aACZN,MAAOJ,EAAWW,MAClBC,SAAU,SAACC,GAAD,OAAOX,EAAY,QAASW,EAAEC,OAAOV,QAC/CW,WAAS,IAEX,0BACEN,GAAG,OACHC,YAAY,0BACZN,MAAOJ,EAAWgB,KAClBJ,SAAU,SAACC,GAAD,OAAOX,EAAY,OAAQW,EAAEC,OAAOV,aAGlD,sBAAKG,UAAU,wBAAf,UACE,oBAAIA,UAAU,gBAAd,SAA+BP,EAAWW,QAC1C,cAAC,IAAD,CAAeJ,UAAU,mBAAzB,SACGP,EAAWgB,aAvBI,qBAAKT,UAAU,iBAAf,6BC8BXU,EAzCC,SAAC,GAMV,IALLC,EAKI,EALJA,MACAC,EAII,EAJJA,UACAC,EAGI,EAHJA,aACApB,EAEI,EAFJA,WACAqB,EACI,EADJA,cAEMC,EAAcJ,EAAMK,MAAK,SAACC,EAAGC,GAAJ,OAAUA,EAAEC,aAAeF,EAAEE,gBAE5D,OACE,sBAAKnB,UAAU,cAAf,UACE,sBAAKA,UAAU,qBAAf,UACE,uCACA,wBAAQoB,QAASR,EAAjB,oBAEF,qBAAKZ,UAAU,oBAAf,SACGe,EAAYM,KAAI,WAAoCC,GAApC,IAAGpB,EAAH,EAAGA,GAAIE,EAAP,EAAOA,MAAOK,EAAd,EAAcA,KAAMU,EAApB,EAAoBA,aAApB,OACf,sBACEnB,UAAS,2BAAsBE,IAAOT,GAAc,UACpD2B,QAAS,kBAAMN,EAAcZ,IAF/B,UAIE,sBAAKF,UAAU,qBAAf,UACE,iCAASI,IACT,wBAAQgB,QAAS,SAACd,GAAD,OAAOO,EAAaX,IAArC,uBAGF,4BAAIO,GAAQA,EAAKc,OAAO,EAAG,KAAO,QAClC,wBAAOvB,UAAU,YAAjB,0BACgB,IACb,IAAIF,KAAKqB,GAAcK,mBAAmB,QAAS,CAClDC,KAAM,UACNC,OAAQ,2BC+BTC,MAxDf,WAAgB,IAAD,EACaC,mBACxBC,aAAalB,MAAQmB,KAAKC,MAAMF,aAAalB,OAAS,IAF3C,mBACNA,EADM,KACCqB,EADD,OAIuBJ,oBAAS,GAJhC,mBAINnC,EAJM,KAIMqB,EAJN,KA0Cb,OApCAmB,qBAAU,WACRJ,aAAaK,QAAQ,QAASJ,KAAKK,UAAUxB,MAC5C,CAACA,IAmCF,sBAAKX,UAAU,MAAf,UACE,cAAC,EAAD,CACEW,MAAOA,EACPC,UApCY,WAChB,IAAMwB,EAAU,CACdlC,GAAImC,MACJjC,MAAO,gBACPK,KAAM,GACNU,aAAcrB,KAAKC,OAGrBiC,EAAS,CAACI,GAAF,mBAAczB,KACtBG,EAAcsB,EAAQlC,KA4BlBW,aAzBe,SAACyB,GACpBN,EAASrB,EAAM4B,QAAO,qBAAGrC,KAAgBoC,OAyBrC7C,WAAYA,EACZqB,cAAeA,IAEjB,cAAC,EAAD,CAAMrB,WAZDkB,EAAM6B,MAAK,qBAAGtC,KAAgBT,KAYAC,aAzBlB,SAAC+C,GACpB,IAAMC,EAAkB/B,EAAMU,KAAI,SAACsB,GACjC,OAAIA,EAAKzC,KAAOuC,EAAYvC,GACnBuC,EAGFE,KAGTX,EAASU,UCrCbE,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,U","file":"static/js/main.6b5188fb.chunk.js","sourcesContent":["import ReactMarkdown from \"react-markdown\";\r\n\r\nconst Main = ({ activeNote, onUpdateNote }) => {\r\n  const onEditField = (field, value) => {\r\n    onUpdateNote({\r\n      ...activeNote,\r\n      [field]: value,\r\n      lastModified: Date.now(),\r\n    });\r\n  };\r\n\r\n  if (!activeNote) return <div className=\"no-active-note\">No Active Note</div>;\r\n\r\n  return (\r\n    <div className=\"app-main\">\r\n      <div className=\"app-main-note-edit\">\r\n        <input\r\n          type=\"text\"\r\n          id=\"title\"\r\n          placeholder=\"Note Title\"\r\n          value={activeNote.title}\r\n          onChange={(e) => onEditField(\"title\", e.target.value)}\r\n          autoFocus\r\n        />\r\n        <textarea\r\n          id=\"body\"\r\n          placeholder=\"Write your note here...\"\r\n          value={activeNote.body}\r\n          onChange={(e) => onEditField(\"body\", e.target.value)}\r\n        />\r\n      </div>\r\n      <div className=\"app-main-note-preview\">\r\n        <h1 className=\"preview-title\">{activeNote.title}</h1>\r\n        <ReactMarkdown className=\"markdown-preview\">\r\n          {activeNote.body}\r\n        </ReactMarkdown>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Main;\r\n","const Sidebar = ({\r\n  notes,\r\n  onAddNote,\r\n  onDeleteNote,\r\n  activeNote,\r\n  setActiveNote,\r\n}) => {\r\n  const sortedNotes = notes.sort((a, b) => b.lastModified - a.lastModified);\r\n\r\n  return (\r\n    <div className=\"app-sidebar\">\r\n      <div className=\"app-sidebar-header\">\r\n        <h1>Notes</h1>\r\n        <button onClick={onAddNote}>Add</button>\r\n      </div>\r\n      <div className=\"app-sidebar-notes\">\r\n        {sortedNotes.map(({ id, title, body, lastModified }, i) => (\r\n          <div\r\n            className={`app-sidebar-note ${id === activeNote && \"active\"}`}\r\n            onClick={() => setActiveNote(id)}\r\n          >\r\n            <div className=\"sidebar-note-title\">\r\n              <strong>{title}</strong>\r\n              <button onClick={(e) => onDeleteNote(id)}>Delete</button>\r\n            </div>\r\n\r\n            <p>{body && body.substr(0, 100) + \"...\"}</p>\r\n            <small className=\"note-meta\">\r\n              Last Modified{\" \"}\r\n              {new Date(lastModified).toLocaleDateString(\"en-GB\", {\r\n                hour: \"2-digit\",\r\n                minute: \"2-digit\",\r\n              })}\r\n            </small>\r\n          </div>\r\n        ))}\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Sidebar;\r\n","import { useEffect, useState } from \"react\";\r\nimport uuid from \"react-uuid\";\r\nimport \"./App.css\";\r\nimport Main from \"./main/Main\";\r\nimport Sidebar from \"./sidebar/Sidebar\";\r\n\r\nfunction App() {\r\n  const [notes, setNotes] = useState(\r\n    localStorage.notes ? JSON.parse(localStorage.notes) : []\r\n  );\r\n  const [activeNote, setActiveNote] = useState(false);\r\n\r\n  useEffect(() => {\r\n    localStorage.setItem(\"notes\", JSON.stringify(notes));\r\n  }, [notes]);\r\n\r\n  const onAddNote = () => {\r\n    const newNote = {\r\n      id: uuid(),\r\n      title: \"Untitled Note\",\r\n      body: \"\",\r\n      lastModified: Date.now(),\r\n    };\r\n\r\n    setNotes([newNote, ...notes]);\r\n    setActiveNote(newNote.id);\r\n  };\r\n\r\n  const onDeleteNote = (noteId) => {\r\n    setNotes(notes.filter(({ id }) => id !== noteId));\r\n  };\r\n\r\n  const onUpdateNote = (updatedNote) => {\r\n    const updatedNotesArr = notes.map((note) => {\r\n      if (note.id === updatedNote.id) {\r\n        return updatedNote;\r\n      }\r\n\r\n      return note;\r\n    });\r\n\r\n    setNotes(updatedNotesArr);\r\n  };\r\n\r\n  const getActiveNote = () => {\r\n    return notes.find(({ id }) => id === activeNote);\r\n  };\r\n\r\n  return (\r\n    <div className=\"App\">\r\n      <Sidebar\r\n        notes={notes}\r\n        onAddNote={onAddNote}\r\n        onDeleteNote={onDeleteNote}\r\n        activeNote={activeNote}\r\n        setActiveNote={setActiveNote}\r\n      />\r\n      <Main activeNote={getActiveNote()} onUpdateNote={onUpdateNote} />\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default App;\r\n","import React from \"react\";\r\nimport ReactDOM from \"react-dom\";\r\nimport App from \"./App.jsx\";\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <App />\r\n  </React.StrictMode>,\r\n  document.getElementById(\"root\")\r\n);\r\n"],"sourceRoot":""}